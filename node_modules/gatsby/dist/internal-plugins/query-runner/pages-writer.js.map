{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","glob","fs","store","emitter","writePages","writtenOnce","getState","program","config","pages","pagesData","reduce","mem","path","matchPath","componentChunkName","layout","jsonName","components","layouts","json","forEach","push","p","component","defaultLayoutExists","sync","directory","length","uniq","uniqBy","c","writeFile","syncRequires","map","join","j","componentName","l","asyncRequires","exports","oldPages","debouncedWritePages","debounce","isEqual","on"],"mappings":";;;;;;;;;;;;;;;;;;AAKA;;AAKA;;;;AAVA,IAAMA,IAAIC,QAAS,QAAT,CAAV;AACA,IAAMC,OAAOD,QAAS,MAAT,CAAb;AACA,IAAME,KAAKF,QAAS,UAAT,CAAX;;eAE2BA,QAAS,cAAT,C;IAAnBG,K,YAAAA,K;IAAOC,O,YAAAA,O;;AAQf;AACA,IAAMC;AAAA,wEAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBC,0BAAc,IAAd;AADiB,8BAEkBH,MAAMI;;AAEzC;AAFmC,cAFlB,EAETC,OAFS,mBAETA,OAFS,EAEAC,MAFA,mBAEAA,MAFA,EAEQC,KAFR,mBAEQA,KAFR;AAKXC,qBALW,GAKCD,MAAME,MAAN,CAChB,UAACC,GAAD;AAAA,kBAAQC,IAAR,SAAQA,IAAR;AAAA,kBAAcC,SAAd,SAAcA,SAAd;AAAA,kBAAyBC,kBAAzB,SAAyBA,kBAAzB;AAAA,kBAA6CC,MAA7C,SAA6CA,MAA7C;AAAA,kBAAqDC,QAArD,SAAqDA,QAArD;AAAA,gEACKL,GADL,IAEE,EAAEG,kBAAF,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCJ,IAAxC,EAA8CC,SAA9C,EAFF;AAAA,aADgB,EAKhB;;AAGF;AARkB,aALD;AAcbI,sBAda,GAcA,EAdA;AAebC,mBAfa,GAeH,EAfG;AAgBbC,gBAhBa,GAgBN,EAhBM;;;AAkBjBX,kBAAMY,OAAN,CAAc,aAAK;AACjBH,yBAAWI,IAAX,CAAgB;AACdP,oCAAoBQ,EAAER,kBADR;AAEdS,2BAAWD,EAAEC;AAFC,eAAhB;AAIA,kBAAID,EAAEP,MAAN,EAAc;AACZG,wBAAQG,IAAR,CAAaC,EAAEP,MAAf;AACD;AACDI,mBAAKE,IAAL,CAAU,EAAET,MAAMU,EAAEV,IAAV,EAAgBI,UAAUM,EAAEN,QAA5B,EAAV;AACD;;AAED;AAXA,cAYIQ,mBA9Ba,GA8BS,KA9BT;;AA+BjB,gBACEzB,KAAK0B,IAAL,CAAU,oBAASnB,QAAQoB,SAAjB,EAA6B,qBAA7B,CAAV,EAA8DC,MAA9D,KAAyE,CAD3E,EAEE;AACAT,sBAAQG,IAAR,CAAc,OAAd;AACAG,oCAAsB,IAAtB;AACD;;AAEDN,sBAAUrB,EAAE+B,IAAF,CAAOV,OAAP,CAAV;AACAD,yBAAapB,EAAEgC,MAAF,CAASZ,UAAT,EAAqB;AAAA,qBAAKa,EAAEhB,kBAAP;AAAA,aAArB,CAAb;;AAvCiB;AAAA,mBAyCXd,GAAG+B,SAAH,CACJ,oBAASzB,QAAQoB,SAAjB,EAA6B,mBAA7B,CADI,EAEJ,yBAAejB,SAAf,EAA0B,IAA1B,EAAgC,CAAhC;;AAGF;AALM,aAzCW;;AAAA;AA+CbuB,wBA/Ca,GA+CG;;KA/CH;;AAkDjBA,4BAAiB,2BAA0Bf,WACxCgB,GADwC,CAEvC;AAAA,qBACG,MAAKH,EAAEhB,kBAAmB,6BAA4B,oBACrDgB,EAAEP,SADmD,CAErD,KAHJ;AAAA,aAFuC,EAOxCW,IAPwC,CAOlC,KAPkC,CAO5B;MAPf;AASAF,4BAAiB,qBAAoBb,KAClCc,GADkC,CAEjC;AAAA,qBACG,MAAKE,EAAEnB,QAAS,eAAc,oBAC7BV,QAAQoB,SADqB,EAE5B,eAF4B,EAG7BS,EAAEnB,QAH2B,CAI7B,IALJ;AAAA,aAFiC,EASlCkB,IATkC,CAS5B,KAT4B,CAStB;MATf;AAWAF,4BAAiB,wBAAuBd,QACrCe,GADqC,CACjC,aAAK;AACR,kBAAIG,gBAAgBC,CAApB;AACA,kBAAIA,MAAM,KAAN,IAAe,OAAOA,CAAP,KAAc,WAAjC,EAA6C;AAC3CD,gCAAiB,OAAjB;AACA,uBAAQ,MAAKC,CAAE,6BAA4B,oBACzC/B,QAAQoB,SADiC,EAExC,eAFwC,EAGzCU,aAHyC,CAIzC,KAJF;AAKD,eAPD,MAOO;AACL,uBAAQ,MAAKC,CAAE,UAAf;AACD;AACF,aAbqC,EAcrCH,IAdqC,CAc/B,KAd+B,CAczB;EAdf;;AAtEiB;AAAA,mBAuFXlC,GAAG+B,SAAH,CACH,GAAEzB,QAAQoB,SAAU,0BADjB,EAEJM;AAEF;AAJM,aAvFW;;AAAA;AA4FbM,yBA5Fa,GA4FI;;GA5FJ;;AA+FjBA,6BAAkB,2BAA0BrB,WACzCgB,GADyC,CAExC;AAAA,qBACG,MAAKH,EAAEhB,kBAAmB,yCAAwCgB,EAAEhB,kBAAmB,IAAG,oBACzFgB,EAAEP,SADuF,CAEzF,IAHJ;AAAA,aAFwC,EAOzCW,IAPyC,CAOnC,KAPmC,CAO7B;MAPf;AASAI,6BAAkB,qBAAoBnB,KACnCc,GADmC,CAElC;AAAA,qBACG,MAAKE,EAAEnB,QAAS,yCAAwC,iCACvDmB,EAAEvB,IADqD,CAEvD,IAAG,oBAASN,QAAQoB,SAAjB,EAA6B,eAA7B,EAA6CS,EAAEnB,QAA/C,CAAyD,IAHhE;AAAA,aAFkC,EAOnCkB,IAPmC,CAO7B,KAP6B,CAOvB;MAPf;AASAI,6BAAkB,wBAAuBpB,QACtCe,GADsC,CAClC,kBAAU;AACb,kBAAIG,gBAAgBrB,MAApB;AACA,kBAAIA,WAAW,KAAX,IAAoB,OAAOA,MAAP,KAAmB,WAA3C,EAAuD;AACrDqB,gCAAiB,OAAjB;AACA,uBAAQ,MAAKrB,MAAO,yCAAyC,sBAAqBA,MAAO,EAAE,IAAG,oBAC5FT,QAAQoB,SADoF,EAE3F,eAF2F,EAG5FU,aAH4F,CAI5F,IAJF;AAKD,eAPD,MAOO;AACL,uBAAQ,MAAKrB,MAAO,UAApB;AACD;AACF,aAbsC,EActCmB,IAdsC,CAchC,KAdgC,CAc1B;EAdf;;AAjHiB;AAAA,mBAkIXlC,GAAG+B,SAAH,CACJ,oBAASzB,QAAQoB,SAAjB,EAA6B,0BAA7B,CADI,EAEJY,aAFI,CAlIW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA0IAC,QAAQpC,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,cAAc,KAAlB;AACA,IAAIoC,iBAAJ;AACA,IAAMC,sBAAsB5C,EAAE6C,QAAF,CAAW,YAAM;AAC3C,MAAI,CAACtC,WAAD,IAAgB,CAACP,EAAE8C,OAAF,CAAUH,QAAV,EAAoBvC,MAAMI,QAAN,GAAiBG,KAArC,CAArB,EAAkE;AAChEL;AACAqC,eAAWvC,MAAMI,QAAN,GAAiBG,KAA5B;AACD;AACF,CAL2B,EAKzB,GALyB,CAA5B;;AAOAN,QAAQ0C,EAAR,CAAY,aAAZ,EAA0B,YAAM;AAC9BH;AACD,CAFD;AAGAvC,QAAQ0C,EAAR,CAAY,qBAAZ,EAAkC,YAAM;AACtCH;AACD,CAFD","file":"pages-writer.js","sourcesContent":["const _ = require(`lodash`)\nconst glob = require(`glob`)\nconst fs = require(`fs-extra`)\n\nconst { store, emitter } = require(`../../redux/`)\nimport {\n  layoutComponentChunkName,\n  pathChunkName,\n} from \"../../utils/js-chunk-names\"\n\nimport { joinPath } from \"../../utils/path\"\n\n// Write out pages information.\nconst writePages = async () => {\n  writtenOnce = true\n  const { program, config, pages } = store.getState()\n\n  // Write out pages.json\n  const pagesData = pages.reduce(\n    (mem, { path, matchPath, componentChunkName, layout, jsonName }) => [\n      ...mem,\n      { componentChunkName, layout, jsonName, path, matchPath },\n    ],\n    []\n  )\n\n  // Get list of components, layouts, and json files.\n  let components = []\n  let layouts = []\n  let json = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n    if (p.layout) {\n      layouts.push(p.layout)\n    }\n    json.push({ path: p.path, jsonName: p.jsonName })\n  })\n\n  // Add the default layout if it exists.\n  let defaultLayoutExists = false\n  if (\n    glob.sync(joinPath(program.directory, `src/layouts/index.*`)).length !== 0\n  ) {\n    layouts.push(`index`)\n    defaultLayoutExists = true\n  }\n\n  layouts = _.uniq(layouts)\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/pages.json`),\n    JSON.stringify(pagesData, null, 4)\n  )\n\n  // Create file with sync requires of layouts/components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"${joinPath(\n          program.directory,\n          `/.cache/json/`,\n          j.jsonName\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.layouts = {\\n${layouts\n    .map(l => {\n      let componentName = l\n      if (l !== false || typeof l !== `undefined`) {\n        componentName = `index`\n        return `  \"${l}\": preferDefault(require(\"${joinPath(\n          program.directory,\n          `/src/layouts/`,\n          componentName\n        )}\"))`\n      } else {\n        return `  \"${l}\": false`\n      }\n    })\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    `${program.directory}/.cache/sync-requires.js`,\n    syncRequires\n  )\n  // Create file with async requires of layouts/components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": require(\"gatsby-module-loader?name=${c.componentChunkName}!${joinPath(\n          c.component\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"gatsby-module-loader?name=${pathChunkName(\n          j.path\n        )}!${joinPath(program.directory, `/.cache/json/`, j.jsonName)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.layouts = {\\n${layouts\n    .map(layout => {\n      let componentName = layout\n      if (layout !== false || typeof layout !== `undefined`) {\n        componentName = `index`\n        return `  \"${layout}\": require(\"gatsby-module-loader?name=${`layout-component---${layout}`}!${joinPath(\n          program.directory,\n          `/src/layouts/`,\n          componentName\n        )}\")`\n      } else {\n        return `  \"${layout}\": false`\n      }\n    })\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/async-requires.js`),\n    asyncRequires\n  )\n\n  return\n}\n\nexports.writePages = writePages\n\nlet writtenOnce = false\nlet oldPages\nconst debouncedWritePages = _.debounce(() => {\n  if (!writtenOnce || !_.isEqual(oldPages, store.getState().pages)) {\n    writePages()\n    oldPages = store.getState().pages\n  }\n}, 250)\n\nemitter.on(`CREATE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"]}